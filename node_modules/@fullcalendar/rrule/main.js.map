{"version":3,"file":"main.js","sources":["src/event-refiners.ts","src/main.ts"],"sourcesContent":["import { createDuration, DateInput, identity, Identity } from '@fullcalendar/common'\nimport { Options as RRuleOptions } from 'rrule'\n\nexport type RRuleInputObjectFull = Omit<RRuleOptions, 'dtstart' | 'until' | 'freq' | 'wkst' | 'byweekday'> & {\n  dtstart: RRuleOptions['dtstart'] | DateInput\n  until: RRuleOptions['until'] | DateInput\n  freq: RRuleOptions['freq'] | string\n  wkst: RRuleOptions['wkst'] | string\n  byweekday: RRuleOptions['byweekday'] | string | string[]\n}\n\nexport type RRuleInputObject = Partial<RRuleInputObjectFull>\nexport type RRuleInput = RRuleInputObject | string\n\nexport const RRULE_EVENT_REFINERS = {\n  rrule: identity as Identity<RRuleInput>,\n  exrule: identity as Identity<RRuleInputObject | RRuleInputObject[]>,\n  exdate: identity as Identity<DateInput | DateInput[]>,\n  duration: createDuration,\n}\n","import { RRule, RRuleSet, rrulestr, Options as RRuleOptions } from 'rrule'\nimport {\n  RecurringType,\n  EventRefined,\n  DateEnv,\n  DateRange,\n  DateMarker,\n  createPlugin,\n  parseMarker,\n  DateInput,\n} from '@fullcalendar/common'\nimport { RRULE_EVENT_REFINERS, RRuleInputObject } from './event-refiners'\nimport './event-declare'\n\ninterface EventRRuleData {\n  rruleSet: RRuleSet\n  isTimeZoneSpecified: boolean\n}\n\nlet recurring: RecurringType<EventRRuleData> = {\n  parse(eventProps: EventRefined, dateEnv: DateEnv) {\n    if (eventProps.rrule != null) {\n      let eventRRuleData = parseEventRRule(eventProps, dateEnv)\n\n      if (eventRRuleData) {\n        return {\n          typeData: { rruleSet: eventRRuleData.rruleSet, isTimeZoneSpecified: eventRRuleData.isTimeZoneSpecified },\n          allDayGuess: !eventRRuleData.isTimeSpecified,\n          duration: eventProps.duration,\n        }\n      }\n    }\n\n    return null\n  },\n  expand(eventRRuleData: EventRRuleData, framingRange: DateRange, dateEnv: DateEnv): DateMarker[] {\n    let dates: DateMarker[]\n\n    if (eventRRuleData.isTimeZoneSpecified) {\n      dates = eventRRuleData.rruleSet.between(\n        dateEnv.toDate(framingRange.start), // rrule lib will treat as UTC-zoned\n        dateEnv.toDate(framingRange.end), // (same)\n        true, // inclusive (will give extra events at start, see https://github.com/jakubroztocil/rrule/issues/84)\n      ).map((date) => dateEnv.createMarker(date)) // convert UTC-zoned-date to locale datemarker\n    } else {\n      // when no timezone in given start/end, the rrule lib will assume UTC,\n      // which is same as our DateMarkers. no need to manipulate\n      dates = eventRRuleData.rruleSet.between(\n        framingRange.start,\n        framingRange.end,\n        true, // inclusive (will give extra events at start, see https://github.com/jakubroztocil/rrule/issues/84)\n      )\n    }\n    return dates\n  },\n}\n\nexport default createPlugin({\n  recurringTypes: [recurring],\n  eventRefiners: RRULE_EVENT_REFINERS,\n})\n\nfunction parseEventRRule(eventProps: EventRefined, dateEnv: DateEnv) {\n  let rruleSet: RRuleSet\n  let isTimeSpecified = false\n  let isTimeZoneSpecified = false\n\n  if (typeof eventProps.rrule === 'string') {\n    let res = parseRRuleString(eventProps.rrule)\n    rruleSet = res.rruleSet\n    isTimeSpecified = res.isTimeSpecified\n    isTimeZoneSpecified = res.isTimeZoneSpecified\n  }\n\n  if (typeof eventProps.rrule === 'object' && eventProps.rrule) { // non-null object\n    let res = parseRRuleObject(eventProps.rrule, dateEnv)\n    rruleSet = new RRuleSet()\n    rruleSet.rrule(res.rrule)\n    isTimeSpecified = res.isTimeSpecified\n    isTimeZoneSpecified = res.isTimeZoneSpecified\n  }\n\n  // convery to arrays. TODO: general util?\n  let exdateInputs: DateInput[] = [].concat(eventProps.exdate || [])\n  let exruleInputs: RRuleInputObject[] = [].concat(eventProps.exrule || [])\n\n  for (let exdateInput of exdateInputs) {\n    let res = parseMarker(exdateInput)\n    isTimeSpecified = isTimeSpecified || !res.isTimeUnspecified\n    isTimeZoneSpecified = isTimeZoneSpecified || res.timeZoneOffset !== null\n    rruleSet.exdate(\n      new Date(res.marker.valueOf() - (res.timeZoneOffset || 0) * 60 * 1000), // NOT DRY\n    )\n  }\n\n  // TODO: exrule is deprecated. what to do? (https://icalendar.org/iCalendar-RFC-5545/a-3-deprecated-features.html)\n  for (let exruleInput of exruleInputs) {\n    let res = parseRRuleObject(exruleInput, dateEnv)\n    isTimeSpecified = isTimeSpecified || res.isTimeSpecified\n    isTimeZoneSpecified = isTimeZoneSpecified || res.isTimeZoneSpecified\n    rruleSet.exrule(res.rrule)\n  }\n\n  return { rruleSet, isTimeSpecified, isTimeZoneSpecified }\n}\n\nfunction parseRRuleObject(rruleInput: RRuleInputObject, dateEnv: DateEnv) {\n  let isTimeSpecified = false\n  let isTimeZoneSpecified = false\n\n  function processDateInput(dateInput: DateInput) {\n    if (typeof dateInput === 'string') {\n      let markerData = parseMarker(dateInput)\n      if (markerData) {\n        isTimeSpecified = isTimeSpecified || !markerData.isTimeUnspecified\n        isTimeZoneSpecified = isTimeZoneSpecified || markerData.timeZoneOffset !== null\n        return new Date(markerData.marker.valueOf() - (markerData.timeZoneOffset || 0) * 60 * 1000) // NOT DRY\n      }\n      return null\n    }\n    return dateInput as Date // TODO: what about number timestamps?\n  }\n\n  let rruleOptions: Partial<RRuleOptions> = {\n    ...rruleInput,\n    dtstart: processDateInput(rruleInput.dtstart),\n    until: processDateInput(rruleInput.until),\n    freq: convertConstant(rruleInput.freq),\n    wkst: rruleInput.wkst == null\n      ? (dateEnv.weekDow - 1 + 7) % 7 // convert Sunday-first to Monday-first\n      : convertConstant(rruleInput.wkst),\n    byweekday: convertConstants(rruleInput.byweekday),\n  }\n\n  return { rrule: new RRule(rruleOptions), isTimeSpecified, isTimeZoneSpecified }\n}\n\nfunction parseRRuleString(str) {\n  let rruleSet = rrulestr(str, { forceset: true }) as RRuleSet\n  let analysis = analyzeRRuleString(str)\n\n  return { rruleSet, ...analysis }\n}\n\nfunction analyzeRRuleString(str) {\n  let isTimeSpecified = false\n  let isTimeZoneSpecified = false\n\n  function processMatch(whole: string, introPart: string, datePart: string) {\n    let result = parseMarker(datePart)\n    isTimeSpecified = isTimeSpecified || !result.isTimeUnspecified\n    isTimeZoneSpecified = isTimeZoneSpecified || result.timeZoneOffset !== null\n  }\n\n  str.replace(/\\b(DTSTART:)([^\\n]*)/, processMatch)\n  str.replace(/\\b(EXDATE:)([^\\n]*)/, processMatch)\n  str.replace(/\\b(UNTIL=)([^;\\n]*)/, processMatch)\n\n  return { isTimeSpecified, isTimeZoneSpecified }\n}\n\nfunction convertConstants(input): number | null | number[] | null[] {\n  if (Array.isArray(input)) {\n    return input.map(convertConstant)\n  }\n  return convertConstant(input)\n}\n\nfunction convertConstant(input): number | null {\n  if (typeof input === 'string') {\n    return RRule[input.toUpperCase()]\n  }\n  return input\n}\n"],"names":[],"mappings":"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"}